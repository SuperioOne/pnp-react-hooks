"use strict";(self.webpackChunkpnp_react_hooks_docs=self.webpackChunkpnp_react_hooks_docs||[]).push([[5984],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=l(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(t),m=i,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(k,r(r({ref:n},c),{},{components:t})):o.createElement(k,r({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var l=2;l<a;l++)r[l]=t[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7644:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var o=t(7462),i=t(3366),a=(t(7294),t(3905)),r=["components"],p={sidebar_position:2},s="Configuration",l={unversionedId:"Configuration",id:"Configuration",title:"Configuration",description:"PnP React hooks only require PnPjs spfi to work. You can easily configure all hooks globally with PnpHookOptionProvider component that uses React context under the hood. Each hook can be configured individually and global configuration can be overridden if needed.",source:"@site/pnp-react-hooks/docs/Configuration.md",sourceDirName:".",slug:"/Configuration",permalink:"/pnp-react-hooks/Configuration",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/pnp-react-hooks/"},next:{title:"Example Components",permalink:"/pnp-react-hooks/ExampleComponents"}},c={},u=[{value:"SPFx",id:"spfx",level:2},{value:"Using dependency variables",id:"using-dependency-variables",level:2},{value:"Behaviors",id:"behaviors",level:2},{value:"Configure for multiple sites",id:"configure-for-multiple-sites",level:2},{value:"Accessing options",id:"accessing-options",level:2}],d={toc:u};function m(e){var n=e.components,p=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},d,p,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"PnP React hooks only require PnPjs ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi")," to work. You can easily configure all hooks globally with ",(0,a.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/PnpHookOptionProvider"},(0,a.kt)("inlineCode",{parentName:"a"},"PnpHookOptionProvider"))," component that uses React context under the hood. Each hook can be configured individually and global configuration can be overridden if needed."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"API/Interfaces/PnpHookGlobalOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"PnpHookGlobalOptions"))," for all options."),(0,a.kt)("h2",{id:"spfx"},"SPFx"),(0,a.kt)("p",null,"Install ",(0,a.kt)("inlineCode",{parentName:"p"},"pnp-react-hooks")," with required peer dependencies to your SPFx project and initialize ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi")," in your main entry point for the web part."),(0,a.kt)("p",null,"This example shows how to initialize options by using component properties."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"PnpReactHookExamplesWebPart.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// Other Webpart imports\n\n// (optional) You can import type for type-safety.\nimport { PnpHookGlobalOptions } from 'pnp-react-hooks';\n// import spfi\nimport { spfi, SPFx} from '@pnp/sp';\n\nexport interface IPnpReactHookExamplesWebPartProps\n{\n  description: string;\n}\n\nexport default class PnpReactHookExamplesWebPart extends BaseClientSideWebPart<IPnpReactHookExamplesWebPartProps>\n{\n  private _hookOptions: PnpHookGlobalOptions;\n\n  // Create onInit function to initialize options.\n  protected onInit(): Promise<void>\n  {\n    return super.onInit().then(async (_) =>\n    {\n      // Initialize sp\n      const sp = spfi().using(SPFx(this.context));\n\n      // Create global options object.\n      this._hookOptions = {\n        sp: sp\n      };\n    });\n  }\n\n  public render(): void\n  {\n    const element: React.ReactElement<IPnpReactHookExamplesProps> = React.createElement(\n      PnpReactHookExamples,\n      {\n        description: this.properties.description,\n        options: this._hookOptions // pass options in props.\n      }\n    );\n\n    ReactDom.render(element, this.domElement);\n  }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"PnpReactHookExamples.tsx")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as React from 'react';\nimport { IPnpReactHookExamplesProps } from './IPnpReactHookExamplesProps';\nimport { PnpHookOptionProvider } from \"pnp-react-hooks\";\n\nconst PnpReactHookExamples = (props: IPnpReactHookExamplesProps) =>\n{\n  // load options to provider\n  return (\n    <PnpHookOptionProvider value={props.options}>\n     {/* your web part components */}\n    </PnpHookOptionProvider>\n  );\n};\n\nexport default PnpReactHookExamples;\n")),(0,a.kt)("h2",{id:"using-dependency-variables"},"Using dependency variables"),(0,a.kt)("p",null,"All hooks supports custom dependency array similar to React's built-in hooks, but unlike React some parameters tracked internally and including them in array is not required. Hooks repeat requests when dependencies are changed."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Tracked parameters are marked with ",(0,a.kt)("inlineCode",{parentName:"p"},"\ud83d\udea9")," symbol in ",(0,a.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/"},"docs"),"."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'let title = "My List";\n\n// request repeated when `title` and query changes.\nconst myList = useList(title, {\n    query: {\n        select: ["Title"]\n    }\n});\n\nconst unnecessary = useList(title, {\n    query: {\n        select: ["Title"]\n    }\n}, [title]); // passing title and query is not required. They are already tracking internally.\n\nlet refresh = {};\n\nconst forcedRefresh = useList(title, {\n    query: {\n        select: ["Title"]\n    }\n}, [refresh]); // You can force refresh with your custom variables.\n')),(0,a.kt)("h2",{id:"behaviors"},"Behaviors"),(0,a.kt)("p",null,"You can leverage PnPJs v3 behaviors for hooks both individually and globally."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Global")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export default class PnpReactHookExamplesWebPart extends BaseClientSideWebPart<IPnpReactHookExamplesWebPartProps>\n{\n  private _hookOptions: PnpHookGlobalOptions;\n\n  // Create onInit function to initialize options.\n  protected onInit(): Promise<void>\n  {\n    return super.onInit().then(async (_) =>\n    {\n      // Simply initialize spfi with your custom behaviors\n      const sp = spfi().using(SPFx(this.context), Caching(), MyCustomBehavior());\n\n      // Create global options object.\n      this._hookOptions = {\n        sp: sp\n      };\n    });\n  }\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Local")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'export default function useWhoAmI()\n{\n    // Apply your custom behaviors to single hook with behaviors option.\n    const user = useCurrentUser({\n        behaviors: [Caching(), MyCustomBehavior()]\n    });\n\n    // useProfile not affected by Caching and MyCustomBehavior\n    const profile = useProfile(user?.LoginName, {\n        disabled: "auto"\n    });\n\n    return [user, profile];\n}\n')),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},(0,a.kt)("inlineCode",{parentName:"p"},"behaviors")," property doesn't override your global behavior configuration, it only appends behaviors to inner queryable instance."))),(0,a.kt)("h2",{id:"configure-for-multiple-sites"},"Configure for multiple sites"),(0,a.kt)("p",null,"Multiple ",(0,a.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/PnpHookOptionProvider"},(0,a.kt)("inlineCode",{parentName:"a"},"PnpHookOptionProvider"))," can be initialized with different ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi")," configurations to access multiple sites. Also each hook function has a ",(0,a.kt)("inlineCode",{parentName:"p"},"sp")," option to override ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const sp_siteA = spfi("tenant/siteA");\nconst sp_siteB = spfi("tenant/siteB").using(Caching());\nconst sp_siteC = spfi("tenant/siteC").using(MyCustomLogger());\n\nexport default function WebPart()\n{\n    return (\n    <>\n        {/* Site A */}\n        <PnpHookOptionProvider value={{sp: sp_siteA}}>\n            <ComponentA />\n            <ComponentB />\n        </PnpHookOptionProvider>\n        {/* Site B */}\n        <PnpHookOptionProvider value={{sp: sp_siteB, keepPreviousState: true}}>\n            <ComponentA />\n                {/* Site C */}\n                <PnpHookOptionProvider value={{sp: sp_siteC, disabled: "auto"}}>\n                    <ComponentA />\n                    <ComponentB />\n                </PnpHookOptionProvider>);\n            <ComponentB />\n        </PnpHookOptionProvider>\n    </>);\n}\n')),(0,a.kt)("p",null,(0,a.kt)("img",{loading:"lazy",alt:"Image",src:t(1890).Z,width:"890",height:"562"})),(0,a.kt)("h2",{id:"accessing-options"},"Accessing options"),(0,a.kt)("p",null,"Global options can be accessed by ",(0,a.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/usePnpHookOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"usePnpHookOptions"))," helper function. This can be useful when creating derivative of options or accessing to  ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi"),"."),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"PnP React hooks only provides functions for read data but you can access and use ",(0,a.kt)("inlineCode",{parentName:"p"},"spfi")," to add, update, delete entities."))))}m.isMDXComponent=!0},1890:function(e,n,t){n.Z=t.p+"assets/images/content-multi-site-36a33abc8ab545be2fcb728f169c9ef6.png"}}]);