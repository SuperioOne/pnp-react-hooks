"use strict";(self.webpackChunkpnp_react_hooks_docs=self.webpackChunkpnp_react_hooks_docs||[]).push([[6915],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=r.createContext({}),m=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=m(t),d=s,f=u["".concat(p,".").concat(d)]||u[d]||c[d]||i;return t?r.createElement(f,o(o({ref:n},l),{},{components:t})):r.createElement(f,o({ref:n},l))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:s,o[1]=a;for(var m=2;m<i;m++)o[m]=t[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5653:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(7294),s="tooltip_Oc7l",i="tooltiptext_weba";function o(e){return r.createElement("div",{className:s},r.createElement("span",{className:i},e.text),e.children)}},5777:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var r=t(7462),s=t(3366),i=(t(7294),t(3905)),o=t(5653),a=["components"],p={},m=void 0,l={unversionedId:"API/Sp/useHasPermission",id:"API/Sp/useHasPermission",title:"useHasPermission",description:"Definition",source:"@site/pnp-react-hooks/docs/API/Sp/useHasPermission.md",sourceDirName:"API/Sp",slug:"/API/Sp/useHasPermission",permalink:"/pnp-react-hooks/API/Sp/useHasPermission",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useGroups",permalink:"/pnp-react-hooks/API/Sp/useGroups"},next:{title:"useIsMemberOf",permalink:"/pnp-react-hooks/API/Sp/useIsMemberOf"}},c={},u=[{value:"Definition",id:"definition",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2},{value:"Web Permission",id:"web-permission",level:3},{value:"List Permission",id:"list-permission",level:3},{value:"Item Permission",id:"item-permission",level:3}],d={toc:u};function f(e){var n=e.components,t=(0,s.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"useHasPermission"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"permissionKinds"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"options?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deps?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/Types/NullableT"},(0,i.kt)("inlineCode",{parentName:"a"},"Nullable")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if user has permission on scope. If not returns ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),". Use ",(0,i.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/Interfaces/UserPermissionOptions#userid"},(0,i.kt)("inlineCode",{parentName:"a"},"UserPermissionOptions.userId"))," for another user and ",(0,i.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/Interfaces/UserPermissionOptions#scope"},(0,i.kt)("inlineCode",{parentName:"a"},"UserPermissionOptions.scope"))," for permission scope. Default is current user permission on current web scope."),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"permissionKinds")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"PermissionKind")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"PermissionKind"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"SP permission kind array or permission kind value. ",(0,i.kt)(o.Z,{text:"Changing the value repeats request",mdxType:"ToolTip"},"\ud83d\udea9"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"options?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pnp-react-hooks/API/Interfaces/UserPermissionOptions"},(0,i.kt)("inlineCode",{parentName:"a"},"UserPermissionOptions"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Pnp hook options.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"deps?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"DependencyList")),(0,i.kt)("td",{parentName:"tr",align:"left"},"useHasPermission will resend request when one of the dependencies changed.")))),(0,i.kt)("h2",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/pnp-react-hooks/API/Types/NullableT"},(0,i.kt)("inlineCode",{parentName:"a"},"Nullable")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"web-permission"},"Web Permission"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import { PermissionKind } from "@pnp/sp/security";\nimport { useHasPermission } from "pnp-react-hooks";\n\nconst permissions = PermissionKind.ViewListItems | PermissionKind.ViewPages\n\n// check current users permission on web\nconst hasPermission = useHasPermission(permissions);\n\n// check another user permission on web\nconst userHasPermission = useHasPermission(permissions, {\n    userId: "user@example.onmicrosoft.com"\n});\n')),(0,i.kt)("h3",{id:"list-permission"},"List Permission"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import { PermissionKind } from "@pnp/sp/security";\nimport { useHasPermission } from "pnp-react-hooks";\n\nconst permissions = PermissionKind.ViewListItems | PermissionKind.ViewPages\n\n// check current user permission on list\nconst hasPermission = useHasPermission(permissions, {\n    scope: {\n        list: "My List Title"\n    }\n});\n\n// check another user permission on list\nconst userHasPermission = useHasPermission(permissions, {\n    userId: "user@example.onmicrosoft.com",\n    scope: {\n        list: "5ee53613-bc0f-4b2a-9904-b21afd8431a7"\n    }\n});\n')),(0,i.kt)("h3",{id:"item-permission"},"Item Permission"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import { PermissionKind } from "@pnp/sp/security";\nimport { useHasPermission } from "pnp-react-hooks";\n\nconst permissions = PermissionKind.ViewListItems | PermissionKind.ViewPages\n\n// check current user permission on item\nconst hasPermission = useHasPermission(permissions, {\n    scope: {\n        list: "My List Title",\n        item: 12\n    }\n});\n\n// check another user permission on item\nconst userHasPermission = useHasPermission(permissions, {\n    userId: 24,\n    scope: {\n        list: "5ee53613-bc0f-4b2a-9904-b21afd8431a7",\n        item: 12\n    }\n});\n')))}f.isMDXComponent=!0}}]);